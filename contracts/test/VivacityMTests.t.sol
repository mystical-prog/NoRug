// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import {Test, console} from "forge-std/Test.sol";
import {VivacityLaunchPad} from "../src/VivacityMainnet/VivacityMPad.sol";
import {VivacityLaunchPool} from "../src/VivacityMainnet/VivacityMPool.sol";
import {ERC20} from "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import {Comptroller} from "../lib/clm/src/Comptroller.sol";
import {CToken} from "../lib/clm/src/CToken.sol";

interface RedStoneOracle {
    function setPrice(bytes32[] memory ids, bytes calldata) external;
}

contract LaunchPadTest is Test {
    VivacityLaunchPad public launchpad;
    address whitelist1 = makeAddr("whitelist-1");
    address creator = makeAddr("creator");
    address buyer = makeAddr("buyer");
    address eth_token = 0x5FD55A1B9FC24967C4dB09C513C3BA0DFa7FF687;
    address atom_token = 0xecEEEfCEE421D8062EF8d6b4D814efe4dc898265;
    address wcanto_token = 0x826551890Dc65655a0Aceca109aB11AbDbD7a07B;
    string name = "NoRug Token";
    string symbol = "NRT";
    uint256 maxSupply = 10000e18;
    uint256 creatorSupply = 1000e18;
    uint256 saleStartTime = block.timestamp + 1000;
    uint256 saleDuration = 5 days;
    address[] whitelists = new address[](1);
    uint256[] amounts = new uint256[](1);
    uint256[3] ratios = [1, 1, 1];
    bytes32[] tempIds = new bytes32[](3);
    bytes callData = bytes("0x45544800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004604aad2f6018f5698b700000000200000013ea5de384061887afbb5947612cbba7a97162f3f160139a6b43ee5159c400fc022bfc1bf603f0d1afc9e4ca66ab0a97889a87ea91ec16fd7c5add17126812ca61b45544800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004604b273ee018f5698b70000000020000001b051d6620361f3a54efd64443d63ceb2296a9c970160933a9ef9bc8d8a9f82254ad02839cba0f9e7ae285d7cfdce2d993f394860133cc7a7fffd581a82cf8f4a1b45544800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004604b273ee018f5698b7000000002000000138c43194c46cb93c7329bd509ef910103468a8c0fc79e42319a1fd8fe801d14b3224169b3c8eb8147b46dc4b548603895f9677ef1e49f7a356a812b4eff104f71b45544800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004605065e98018f5698b700000000200000011c609e00d37416240ea45a3eb7fe1f7a57a5d1fc4cb580db23ebcdbc598e886b04007f8bb4cdf3faebc21594e730fc5bd37c72ee5f8d7c7f4cfa80783a09189e1c45544800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004604b273ee018f5698b700000000200000014154015bd67ef87c28620ca9f0617cc1ca3813a753825e5dfb51f59e8e6086c019b6bb911dcfd0b1062e50d90d12aab7199c12624a36a858089eb03157dcf13f1c41544f4d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003548d055018f5698b70000000020000001d6c388bba0d4d25f34ea1f3c9533fc5a28f08ca4e6d2cf71ab70434a610916f6452ac81ad6e198f90eb74f47bfab65708015d68293a0ea0aa735e8799fd45ab41b41544f4d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003548d055018f5698b7000000002000000166447f25de72d183f6c1f955c89d56685d1a33bc70bbf6bfba5bb9170f3062d64ec3c213eb7e225c937b30df92adc0a947d0bb6bfa9547d3475dc0ca78e18d311c41544f4d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003548d055018f5698b70000000020000001d65d10a648d2433acb015153a0ca8ed52016b51e59423c4398e014aae94c2986339b9fe279d06f1b04cdc611d5348e4f4eee2f8c7326b7dcae3d43f07735ccf51c41544f4d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003548d055018f5698b700000000200000012ca72c5b5f82802ffba690b5914af1e85e0ceed842e3952ef39c9ec2339eceac2d8c9e96d111fd90b2e3d520c59bc9ef553eaa83d2315b2904633ca53a7191341c41544f4d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003548d055018f5698b70000000020000001bc73647efb6c00b663d1a2727d9b6a84f55b2555d75006a3d310f844fcaa9ea05884860ef75b5034c243c4e9e4367e13ce94a7a4e5f486ac10276c61d6a4b66f1c43414e544f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d68acd018f5698b7000000002000000121bfca54abf357ed6fd110653f8acdaeeb6351e45df889723103a316723cd6a457f785627764916bf44640eb088c75a8e1f3a429485a2147e213ec72f09a62721b43414e544f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d68ad8018f5698b700000000200000012740c9ef137849b18aa201203ef248157a07a4aaca58827c0264428013e210cf4a3652db97167a2b755863351bf85e4ca837fde19b29887fc06854f27b7a48fb1b43414e544f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d68ad8018f5698b7000000002000000108bb0cff86ac5a5867183c7a0901e305fa7b9ad35057bbe6564b9c7dc2dd40b57509d446d705cc926165ac20d65f0927023c52b77a2041d0af9fc641970db4f61b43414e544f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d68b58018f5698b70000000020000001ae97f71061df89072e9c70ff4ed338ad5e51926a93f36fdc4aadf2d31fc7df9a72a322911a830bf12cb6ee7226fef91684f8274a20ad9f8cd4bbaf4f1f2552c61c43414e544f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d68ad8018f5698b700000000200000010f568ce18091d8312175d384e32e4cf91d3247b0494878b474b4b4f588e0f9585e9472745bb09834fc03810fdec1a03c33006bf1da246d9a433961fa605e35671b000f3137313531343438313834363923302e332e362372656473746f6e652d7072696d6172792d70726f645f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f000040000002ed57011e0000");

    function setUp() public {
        launchpad = new VivacityLaunchPad();
        whitelists[0] = whitelist1;
        amounts[0] = 100e18;
        vm.prank(creator);
        launchpad.createLaunchPool(
            name, symbol, maxSupply, creatorSupply, saleStartTime, saleDuration, whitelists, amounts, ratios
        );
        tempIds[0] = bytes32(0x4554480000000000000000000000000000000000000000000000000000000000);
        tempIds[1] = bytes32(0x41544f4d00000000000000000000000000000000000000000000000000000000);
        tempIds[2] = bytes32(0x43414e544f000000000000000000000000000000000000000000000000000000);
    }

    function testCreateLaunchPool() public view {
        address poolAddress = launchpad.getLaunchPoolAddress(0);
        assertTrue(poolAddress != address(0));

        VivacityLaunchPool pool = VivacityLaunchPool(poolAddress);
        assertEq(pool.name(), name);
        assertEq(pool.symbol(), symbol);
        assertEq(pool.saleStartTime(), saleStartTime);
        assertEq(pool.saleDuration(), saleDuration);
        assertEq(pool.whitelist(0), whitelist1);
        assertEq(pool.amounts(0), 100e18);
    }

    // function testComp() public view {
    //     Comptroller unitest = Comptroller(0xe49627059Dd2A0fba4A81528207231C508d276CB);
    //     CToken[] memory cTokens = unitest.getAllMarkets();
    // }

    function testBuy() public {
        address poolAddress = launchpad.getLaunchPoolAddress(0);
        VivacityLaunchPool pool = VivacityLaunchPool(poolAddress);
        console.log("LaunchPool address: ", poolAddress);

        console.log("Buying tokens with ETH");
        ERC20 atom_erc20 = ERC20(atom_token);
        deal(address(atom_token), buyer, 100e18);
        deal(poolAddress, 100e18);
        vm.warp(block.timestamp + 86410 * 3);
        vm.startPrank(buyer);
        atom_erc20.approve(poolAddress, 1000e18);
        // uint256 allowed = atom_erc20.allowance(buyer, poolAddress);
        // console.log(allowed);
        skip(100);
        pool.buy(1, 100e18);
        vm.stopPrank();
        vm.warp(block.timestamp + 86410 * 6);
        RedStoneOracle oracle = RedStoneOracle(0xD0614Bd728D0C339a0Ee45065DEf95C6be12a7c0);
        oracle.setPrice(tempIds, callData);
        pool.airdrop();
        assertEq(pool.balanceOf(buyer), 10e18);
    }
}
